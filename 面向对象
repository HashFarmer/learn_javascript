有什么  ->  properties
能干什么  ->  methods

为什么要有类？就是为了方便快捷地批量生成某些类型的对象。

两种object，1、基于class创建的，2、单体object。 

3、独立在外的constructor函数，为什么要用prototype呢？解决继承的问题？为了properties与methods的分离？



始于单体object，进化到 类、构造函数

针对class，properties 不用在constructor外重复声明。  方法也是直接写，不用function声明



//
static = belongs to the class, not the objects
          properties : useful for caches, fixed-configuration , 共性的东西
          methods: useful for utility function    ， 比如 Math.round()，基本上纯粹对外服务
          
这一点，在概念上与python是类似的 

// super
constructor(_x, _y, _z){
    super(_x, _y)
    this.z = _z
}
super就可以帮助处理一部分参数，帮助给一部分properties赋值

// getter 属性化地访问私有成员？还可以做一些修饰，或者增加一些展示逻辑

--代码每一步运算都会返回一个对象，这个对象有什么，能干什么，都受约束

// try catch finally

// promise 的 then 里面填 resolve 的具体函数， catch里面填 reject 的具体函数

// 成功就 return， 失败就 throw
// https://www.youtube.com/watch?v=8dWL3wF_OMw
// promise，async-await讲得也不错


