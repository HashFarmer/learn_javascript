嵌入到html页面里的 .js 代码，不需要exports关键字，.js代码里的元素全部可用


// 
//--------------

导出方式【a.js】：
exports.SayHello = () => {
    console.log("Hello!");
}
或
function SayHello() {
    console.log("Hello! How are you?");
}
module.exports = SayHello;

与之对应的，正确的导入方式【b.js】:
const {SayHello} = require('./b.js');
错误的导入方式【b.js】:
import {SayHello} from "./b.js";

含有require()语句的js文件不能被嵌入到html文件。但是可以被node 执行。

//------------------------------
导出文件【a.js】：
function SayHello() {
    console.log("Hello! How are you?");
}

function SayGoodbye() {
    console.log("Goodbye");
}

module.exports = {SayHello, SayGoodbye};

导入文件【b.js】：
const {SayHello,SayGoodbye} = require('./b.js');
SayHello();
SayGoodbye();

//---------------------------------
导出文件【a.js】
exports.SayHello = () => {
    console.log("Hello! How are you?");
}

exports.SayGoodbye = function() {
    console.log("Goodbye");
}

导入文件【b.js】
const {SayHello,SayGoodbye} = require('./b.js');
SayHello();
SayGoodbye();


common js 导出的核心是 exports 对象的构建，导入用require来解构
require这种方式常用于node程序中

/====================================




// ES6 module
//--------------------
导出方式 A【a.js】
const SayHello = () => {
    console.log("Hello! How are you?");
}
export { SayHello};

导出方式b【a.js】
export const SayHello = () => {
    console.log("Hello! How are you?");
}

导出方式a，b，与之对应的导入方式【b.js】
import {SayHello} from "./b.js";

嵌入的html文件
<html>
    <head>
    </head>

    <body>
        <script src="example.js" type="module">          // type = "module"的真正含义，把example.js中对象限制为模块级别，而非全局级别（window.）
        </script>
    </body>

</html>

不论哪种导出方式，html页面都可以正确运行（必须运行在服务器上），但是不能单独 node 执行b.js
如果想要单独执行 b.js ，需要 npm init -y，然后在package.json中添加 "type":"module",


//--------------------------------

【导出】

export const SayHello = () => {
    console.log("Hello! How are you?");
}

export const SayGoodbye = function() {
    console.log("Goodbye! See you.");
}

【导入】
import{SayHello, SayGoodbye} from './b.js';
SayHello();
SayGoodbye();

【html】
<html>
    <head>
    </head>

    <body>
        <script src="example.js", type = "module">
        </script>
    </body>

</html>


//--------------------------------
【导出】
// 如果导出，const不可少
const SayHello = function() {
    console.log("Hello! How are you?");
}


function SayGoodbye() {
    console.log("Goodbye! See you.");
}

// 如果导出，const不可少
const SaySomething = () => {
    console.log("Im OK.")
}

export { SayHello, SayGoodbye, SaySomething};

【导入】（如果要在node中执行，需要package.json中设置"type": "module"）
import{SayHello, SayGoodbye, SaySomething} from './b.js';
SayHello();
SayGoodbye();
SaySomething();

【html文件】
<html>
    <head>
    </head>

    <body>
        <script src="example.js", type = "module">
        </script>
    </body>

</html>
